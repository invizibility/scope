// Code generated by go-bindata.
// sources:
// index.html
// lib.js
// lib.css
// DO NOT EDIT!

package main

import (
	"github.com/elazarl/go-bindata-assetfs"
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _indexHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x93\xd1\x52\xf3\x20\x10\x85\xef\xf3\x14\xfc\xdc\x27\xcc\xaf\x5e\x92\xdc\xfa\x00\x3e\x01\x09\x5b\xa1\x12\x40\xd8\x46\xf3\xf6\x6e\xa1\x3a\xcd\x4c\x1d\xeb\xd4\xdc\xc0\x2c\xe7\x7c\xec\xec\x09\xd2\xe0\xec\x86\xa6\x91\x06\x94\x1e\x1a\x46\x9f\x44\x8b\x0e\x86\x47\xf0\x61\x06\xf6\x34\x85\x08\x52\xd4\x5a\x3d\x77\xd6\xbf\xb0\x04\xae\xe7\x19\x57\x07\xd9\x00\x20\x67\x26\xc1\xae\xe7\x62\xca\x59\x8c\x21\x60\xc6\xa4\x62\x37\x5b\xdf\x51\x85\x5f\xe3\x74\x76\x3c\xd7\xe6\x29\xd9\x88\x0c\xd7\x08\x3d\x47\x78\x47\xb1\x57\x8b\xaa\x55\xce\x72\x9a\xaa\x45\xe8\xfb\x6e\x79\x28\x17\xed\xc9\x2b\x45\x55\xfc\x1a\xd2\xbe\x1e\xe0\x00\xdd\x72\xf7\x07\xa8\x04\x04\xcb\xd8\x2d\xff\x6f\x85\xed\x09\x94\xd6\x5b\x29\xdb\x3c\xb6\x20\x29\x6a\xf2\x8d\x1c\x83\x5e\x69\x2d\xe4\x7f\x6d\x5b\x37\xda\x2e\xcc\x6a\xa2\x87\xc8\xd9\xe4\x54\xce\x3d\x9f\xc1\x1f\x4e\x29\xd5\x54\xd5\x08\x8e\xed\x42\xea\xf9\x9b\xd5\x68\xf8\xc0\xca\xca\xa4\x28\x47\x03\x75\x1a\x95\x2f\x9c\x93\x80\xee\xa7\xca\x65\x86\x01\xfb\x6c\x90\x20\x75\x73\x89\xf2\x29\x39\xc7\x48\x41\xbd\x0e\xdb\xae\x1d\xec\xf0\xab\xed\x29\x78\x54\xd6\x43\xe2\xdf\x1b\x66\x12\xfc\x6c\x68\xdb\xe3\xdc\xea\xbc\xae\x09\xe1\xf8\x67\x6f\xa7\xde\x1c\xe7\x5e\x5e\xde\x47\x00\x00\x00\xff\xff\x61\x16\xf4\x09\x81\x03\x00\x00")

func indexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_indexHtml,
		"index.html",
	)
}

func indexHtml() (*asset, error) {
	bytes, err := indexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "index.html", size: 897, mode: os.FileMode(420), modTime: time.Unix(1485460952, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _libJs = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xdc\x3c\xdb\x72\xdb\xc8\x72\xef\xfc\x8a\x09\x7c\xaa\x0e\x68\x41\xbc\xc8\xc9\x79\x30\x2d\x6f\xad\x6f\x6b\x55\xbc\xf2\x1e\xc9\x9b\x4d\xa2\x62\xa9\x20\x02\x22\x61\x83\x04\x17\x00\x25\x72\x7d\x54\x75\x7e\x24\x7f\x92\xbf\xc9\x07\xe4\x17\xd2\xdd\x73\x1f\x0c\x78\xf1\xb1\x77\xab\xc2\x07\x11\x98\xe9\xe9\x99\xe9\xee\xe9\xe9\x1b\xd5\xef\xdf\xc5\x25\x7b\x9b\xbd\x64\xa7\xf4\xf7\x6f\x7f\x63\x9f\x1f\x46\x1d\xde\xfc\x22\x9b\xfe\x92\x4d\xa1\x47\x3c\x88\x4e\xec\xaa\x16\xc5\x3d\x74\xd0\x97\x68\xc6\xe7\x5e\x12\xd7\x31\x40\xdf\xd3\x30\xab\xf5\x6d\x36\x11\x4d\x9d\xf0\x76\xb5\x98\xd4\x59\xb1\x08\x5f\x74\x3f\x77\x18\x7b\xd1\xfb\x21\xad\xa1\x53\x35\xff\x7c\x71\x16\x4d\xe2\x3c\xbf\x89\x27\x9f\xba\x0c\x41\xf0\x83\xf3\x4e\x8a\xc5\xad\xc0\x6d\xb4\x96\x69\x9c\x6c\x4c\x04\x69\x59\x16\x65\x54\xa6\xd5\x2a\xaf\xab\xae\x44\xc0\xc4\xf0\x1e\xe0\x07\x68\xf8\xeb\x76\x4c\x66\x65\x05\x3d\x62\xe0\xd5\x60\xec\x02\xdc\x64\x8b\x2a\xfb\x2d\x35\x81\x86\x06\x90\x58\x73\xc8\xa1\xbb\xa2\x43\x2e\x35\x79\x72\xfd\xeb\x2a\x5d\xa5\x3d\xfa\x1b\x9e\xc8\xfe\x5e\x92\xde\xa6\x65\x98\x3c\xe9\x7d\xac\x8a\x45\x84\x0b\x63\x47\x2c\xe8\xe7\x59\x55\x07\xbb\x80\xe4\x8a\x34\x60\x7c\x1f\x67\xf5\xf7\x79\x1e\x12\x59\xba\xa3\x8e\x5c\xc3\x8b\xde\x24\x5e\xdc\xc5\x95\x49\x29\x20\x4e\x47\x92\x71\x96\x66\xd3\x59\xad\x5e\xef\xb3\xa4\x9e\x75\x34\x8d\xa7\x00\x5f\xa9\xf7\xb5\x7a\xda\xa8\x27\x58\xd3\x69\x10\xa8\xd7\x9b\xb8\x7c\x4b\x28\x61\xc2\x7f\x19\xe8\x79\xf8\x2a\x34\x18\xdf\x41\x47\x03\xd4\x45\x1d\xe7\xef\xd2\xc5\xb4\x9e\x99\x6b\x15\x4b\xd0\x12\xc1\xa1\x73\x80\x19\x8c\x54\x93\x80\xea\xdd\x16\xe5\xeb\x78\x32\xd3\xc2\x56\x46\x2c\x33\xc7\xe2\x27\x67\x47\xa7\x2c\x3c\x2a\x7b\xe9\x22\xe9\xb2\x63\x7a\xac\xea\xb8\xac\xbb\x0a\xec\xa1\x6b\xa0\xae\x57\xe5\x82\xe5\x82\xa2\x1d\x83\x38\x8b\x24\x2d\x2f\x68\x66\x73\xc5\x93\x7a\x1d\xb1\x75\x71\x7b\x5b\xa5\x75\xc4\x36\xf2\x81\x2f\x11\x7a\x2a\x90\x98\x14\x3a\xc4\xf7\xa4\xc8\x8b\x52\x2f\xb1\xdf\x17\xf4\xaa\xd7\x80\x94\x53\xad\xb7\x28\x92\x34\xec\xf6\xa6\x69\xfd\xb2\x58\xd4\xe9\xba\x0e\x83\x93\x24\xe8\xea\xfd\xf7\xfb\x20\x7d\x55\x91\xa7\xbd\xbc\x98\x86\xf3\x18\xe6\x83\x3f\xbd\x9c\xc8\xd9\xed\x28\x38\xa0\x0f\x0b\x11\x7d\x46\xf4\x83\xaf\x67\x62\x61\x02\x16\x9a\x8e\x8e\x5c\x82\xc1\x5a\x7a\xb7\x59\x9e\x5f\xd6\x9b\x3c\xc5\x55\xe1\x92\x2d\x08\x12\x8e\x21\x74\xf1\xdd\x09\xae\x5d\x65\xe3\xde\x9b\xb2\x98\x77\x9b\xb0\x27\x3e\xd8\x0f\x45\x13\x12\xe4\x89\x64\x12\xe1\x4f\x80\x59\xeb\xa1\x0f\x64\x26\x45\x6e\xe3\xe2\xfc\x31\x5e\x37\x91\x6e\x70\xa9\x5a\x52\x8f\x35\x0a\xef\xbe\x2f\xd2\x49\x1d\xae\xe1\xe4\x09\xae\xe2\xd3\x10\x38\x08\xdf\x1b\xd5\xb2\x81\x16\xb9\xd8\x48\x23\x34\x98\xf4\xd0\xd1\x7f\x71\x15\xd7\x5c\x82\xae\x9b\x4a\x4c\xea\x19\x57\xea\xe7\x19\x4a\xda\x19\xe8\x99\x45\x56\x6f\x46\x76\x5f\x8c\x02\x73\xec\xef\xe4\xa4\x46\x25\x70\x35\xb6\x3b\xf8\xfa\x3d\x3d\x72\x67\x20\x27\x56\x7b\x4b\xb3\x3c\xbe\xd0\x61\x9c\x64\x75\x7c\x77\x9f\xd4\xc4\x95\x3a\x52\x47\x0c\x4f\x6a\x98\xe8\xa3\x9a\x88\xa3\xda\x65\x8f\xb9\xb2\x62\x7d\x35\x61\x63\x38\xed\x1a\x50\x80\x02\xa5\xc7\x77\xd9\x22\x8d\x4b\x38\x49\x49\x31\x8f\xb3\x45\x78\x85\xa8\x39\xbe\x88\xc9\x69\xc6\xdd\x5e\x19\x2f\xa6\x69\x78\x35\x88\xd8\xfd\xd8\x96\x1e\x41\xc8\xde\x72\x55\xcd\x42\x7a\x76\xfa\x05\x3d\x39\x00\x7f\xb1\x21\xa4\xc0\x9c\xb2\x7b\xbf\xba\x21\xce\x37\xe9\x13\x97\xa5\x4b\x21\x68\xda\x83\x8e\xf8\xc9\x6e\x19\xec\x0e\xce\x02\x7b\x8e\x82\xe2\x03\xc1\x0f\x97\x21\x02\x6c\xf4\x3f\x6c\x41\xfa\x0c\x25\xb3\x15\x29\x09\xed\x3e\x48\x1f\xbc\x0a\x98\x84\x71\x27\x27\x61\x16\xd4\x79\x6b\x8b\x7b\xea\x88\x8f\x6d\x74\xa4\xc0\x0c\x6c\xef\xcb\x24\x5b\xc4\x79\x48\xef\xb3\x74\x9e\xbe\x8c\xeb\x74\x5a\x94\x9b\xe1\xa0\x6b\x1f\x24\xbc\xe9\xa7\x65\xb1\x5a\x24\x30\x3c\x78\xf4\xfa\xcd\xeb\xc0\xc6\x7c\x90\xda\x76\x15\xab\xc6\xde\x00\x11\x3a\x08\xb4\x4e\xc4\xb4\x8e\xe1\xbb\xeb\x9a\x16\x8b\xba\x05\xd6\xd1\x26\xe2\x90\x1e\xc0\x56\x31\x93\xd7\x54\xe3\xd6\x34\xaf\x3b\xeb\x8e\xab\x40\xcd\xb6\xde\x73\xa2\xd3\xbc\xeb\xc2\xac\x6b\xf1\xd9\xaf\x15\x2d\x7b\xc5\x51\x83\xbf\x12\xeb\xfc\x76\xd5\x21\x1a\xe6\xd7\x36\xfb\x0a\x38\x06\x06\x4a\x3f\x80\x97\x04\xed\x43\x6c\x7c\xca\xdf\x48\x5b\xe0\xfb\x31\x7f\x87\xc5\xd2\x10\x7c\x13\x46\x8d\x57\x8a\x7f\xd5\x26\x9a\xd4\xfb\x5d\x67\xe7\xbb\x37\x9e\x4b\xf3\x68\xab\x8a\x45\xc8\x55\x99\x73\x6b\xd7\xb4\x17\x69\x91\x02\x87\x5c\xb3\x36\xf8\x5c\xf9\x09\x7e\xbe\x78\x17\x44\x80\x48\x63\x16\x84\x0a\xa1\x31\x62\xed\x74\x15\xd3\x21\x97\x46\xf6\x85\x6a\xa2\x7f\x71\x76\x7e\x79\xf6\x9f\xaf\x83\xa8\x41\x36\xfc\x08\x22\x85\xe6\xfd\x69\x12\x6c\x32\x43\x3e\x18\xb4\xaa\xd2\x3c\xa5\xa7\xee\x67\x30\x87\xd4\x1b\xcb\x2a\x71\x1c\x25\x22\x65\x0f\x2b\x18\xd9\x63\x4f\x69\xcc\xd3\x5b\x9b\x33\x5d\xc3\x7e\xa5\x59\x18\x97\xd3\xd5\x3c\x5d\xc0\x49\x12\x74\xfd\x8e\x85\xeb\x53\x76\x1d\xf1\x81\x5d\xf6\x94\xad\x47\x16\xaa\xcd\x21\xa8\x36\x36\xaa\x8d\x8d\x4a\x70\xfe\x10\x84\x62\x88\x8d\x56\x34\xda\xc8\xa5\xd5\xb5\x37\x6a\x1a\x60\x23\xa6\x26\x1b\xad\xb2\xd4\xf6\xc6\xcb\x47\xd8\x88\x79\x9b\x8d\x99\x3b\x78\x7b\xa3\x45\xbf\xc5\xc2\x09\x0d\x36\x42\xd3\x95\xd9\x1b\xad\x1a\x64\x23\x57\xcd\x72\x0a\x81\x82\x00\x3a\x28\x6c\x0f\xa1\xe3\x4c\x77\xbb\x96\xdb\x7c\x49\x2e\xed\xa5\x60\xfa\x9b\xa2\x9c\x9b\xcb\xc2\x33\x08\x62\xaf\x3b\x3b\xe2\x3e\x02\xe7\xb6\x63\x3a\x73\xe7\xab\xb9\xf5\x4e\xc7\x42\xeb\x16\x32\x04\x07\xd1\x60\x3c\xea\xf7\xeb\xfb\xc2\x05\xba\xe5\xd3\x7e\x0e\x10\x6f\xf0\xf4\x6a\x1c\x05\x55\x4a\x0f\x0f\x6a\xc2\xd6\x73\x29\xb4\x04\x42\xe1\x2e\xb5\xc9\x09\x58\xb9\x53\x72\x3a\x18\x65\xcf\xd4\x3a\x47\xe8\x8a\x48\xcd\x82\x23\xb8\x51\x85\x53\x9b\x9a\xa0\xdf\xff\xf0\xfe\xd5\x7b\x76\x21\x87\xb1\x4b\x39\x63\x8f\xfa\xd5\x02\xa4\xaf\xcc\x1b\x50\x13\x07\x49\x76\x67\x38\xdb\x30\x45\x88\x7f\x54\x0b\xf0\x16\xf5\x81\x72\xb2\x97\x4b\xd0\x10\xce\x28\xf4\xff\x71\x4d\xef\x97\x35\x2d\x4b\x12\x02\xae\x96\x18\xae\xd8\x6b\xb2\x46\x4c\x82\x08\xa7\x4c\xe9\x4c\x21\x09\x3f\xc6\xf5\xac\x47\x77\xbf\x80\x00\x03\xf7\x04\x8c\x5b\x30\x41\xd4\x75\xe3\x83\x79\xc2\x61\x8c\x99\xc5\x62\xb6\x32\xc1\x20\x4b\x2f\xb5\x6e\x49\x24\x6f\xe3\xfa\xef\xf7\xd1\x34\xa2\x11\x61\x3d\xcb\xaa\x6e\x83\x88\x20\x97\xf3\xe2\x2e\x0d\x4d\x2d\x4e\x64\xc8\xee\x84\xa1\x65\x8c\x76\x60\x32\x32\xa6\x38\xdf\x71\x9b\x99\xd1\x0f\xe3\x15\xdd\xf3\xf8\x26\xcd\x83\xae\x63\x45\xf6\xe2\xba\x2e\xc3\x00\x84\x28\x80\x75\x27\x8d\x6e\x32\xbc\xec\x76\xf2\x0d\x52\xbc\x21\x4d\xf4\x7c\x85\xb0\x95\x49\x1e\x57\x55\x9a\x10\xce\xf9\x31\x5c\x5a\x75\x59\xe4\x80\xbc\x2e\x57\x69\x57\x4c\x97\x25\x8d\xd9\x10\xfa\x8a\x9f\x8c\xb1\x70\x10\xd2\xbc\x0d\x00\x7d\x53\x83\x86\xc5\x12\x89\xdf\xdc\x1b\xc9\xa4\x96\x78\xa3\xc7\x96\x4d\x4d\x0c\xb1\x99\x36\x84\x7c\xf5\x77\x71\xbe\x4a\x03\xf3\x0e\xf7\x58\x7c\xfc\x23\xc4\x33\xe9\x9d\xc7\xf3\xd4\xe9\x7f\x68\x41\xcf\x85\xf3\x40\xfc\xdc\x9c\xd9\x39\x03\xb1\xf3\x6b\xae\x1b\x85\x61\x01\x30\x23\xa7\x4d\x04\x44\x8c\x56\xe0\x57\x0f\xe6\x04\x0e\xe2\x99\x0e\xb6\x99\x40\x0c\x87\xa3\x70\xcd\xea\x39\xb0\x17\xd7\x40\x06\x24\xb2\xf2\x0a\xcf\x80\x60\x7e\x9a\x9c\x81\xcd\xb1\x1e\xd3\x2a\xf1\x9c\x33\x4e\x86\xed\xc0\xef\x44\x5c\xc7\x9e\x11\x37\x81\xce\xc7\xb6\x29\x46\xcd\x55\x72\x8b\x72\xc7\x5c\xee\x38\x2e\xca\xa8\xfb\x49\x92\x85\xa7\x43\x62\x85\xa7\xca\xd4\x7d\x52\xe1\x79\x67\x46\xff\x00\x06\x34\x69\xfd\x60\x44\xad\x14\x3f\xbc\xca\xc4\xab\x96\xe5\xa0\x6c\xb1\x5c\xd5\x87\x0f\xab\x70\x17\x72\xac\x82\xa4\x86\xb6\x23\x45\x0a\xc1\x54\x62\xc8\xcd\x2a\x6d\x82\x57\xe8\xec\x85\x01\xd9\x46\x38\x64\xf8\x97\xc1\x72\x1d\x74\xe5\x3d\xc6\xf5\x28\x3b\x7b\xc5\x62\x70\x2d\xc0\x13\x61\xe0\x72\xd4\x69\xaf\xa1\x47\x88\xf8\x52\xcf\xa8\xb0\x33\x91\x0d\x6f\x82\x2d\x26\x22\xb7\x14\xe8\x78\xc8\xfe\x02\xf7\x5c\xab\x57\x09\xdc\x13\x37\x2c\x9d\x91\xd5\xdc\xa2\x62\xf0\x48\xdd\xd4\xa0\x33\x4d\x09\xa0\x41\x18\x1d\xf8\x27\xd7\x42\x92\xc7\x44\x2f\x4b\x9b\x00\x2d\x81\x49\x34\x04\xdc\xa0\xa4\xb8\xe5\x70\x57\x8e\x4a\x6d\x2c\xc3\xe2\xe8\x16\xa9\x55\xc0\x76\x28\x15\x30\x47\xac\x4a\x6d\xe7\x6a\x4d\xce\x43\xaf\x5a\xe6\x19\x90\xe1\x38\x68\xfa\x9e\xc4\x15\x5b\x23\xe0\x22\x83\xa7\xb8\xec\xc8\x6e\x27\x8f\x12\x7a\x8e\xd6\x57\x83\xb1\xd3\x07\x62\xc7\x7b\x86\x6e\x8f\x50\xb1\x4f\x8d\x73\xe4\x77\x94\x6c\x46\xa3\x70\xb0\x34\x07\x6a\xb8\x8c\xb8\x1e\x99\xd6\xd4\x6a\x09\x37\x4f\x2a\xbb\xbf\xb3\xcd\x34\x62\x51\x9b\xa1\xb6\x5d\x33\x08\x84\x74\xfb\xe1\xbe\x8f\x80\x7c\x47\x46\x23\xba\xd3\xfd\xfe\x0a\xd6\xb7\x98\x32\xe0\x02\x9c\x04\x3c\xad\xdf\x35\x37\x44\xf2\x3d\x22\x61\xf7\x48\xfc\xf9\x6a\x7e\xb8\x5b\x04\x83\x7c\x8e\x11\x49\xa0\x9e\x40\xe4\x8b\xf6\xc6\x8d\xf0\x36\x5a\x6c\xe1\x18\x41\xd8\x08\xa7\x60\xe2\xff\xfc\xfd\xef\xff\xfb\xdf\xff\x05\x7f\x8d\x54\x8d\xcc\x3f\x70\x88\x11\x8e\x6a\xf1\x1d\xd0\x61\xd0\x37\xe3\x5b\xe2\x08\x1d\x5c\xe0\x08\x1d\x35\xc1\xa1\xe0\xfc\xfd\x39\xb8\xdd\xf2\xed\xdf\x5e\x9a\xcf\xd7\x97\x7f\xbd\xf8\xa0\x1b\xfe\xf5\x42\x3f\xff\xf0\xcb\xb5\xf9\x7a\x76\xfe\xe1\xf5\xc5\xb5\x03\x60\x22\xe3\x00\x66\xcb\xbb\xf7\xdf\xbf\x7a\xfd\x0a\x23\x66\x63\xb1\xb6\xd5\x22\xe3\xc1\xe7\xe0\xc5\x4f\xa8\x0c\xdf\x5c\x7c\xff\x43\x30\xfe\xc3\x4d\xe8\x7d\x93\x51\x8d\x54\xd4\x01\x89\xa8\x9d\x69\x28\x65\xa5\x18\x29\x28\x12\xf6\xb7\xfb\xe4\x4e\xb7\xe4\x48\x9b\xe9\x05\x54\xd6\xd4\xd7\x85\xe3\x56\x16\xf7\x8c\x5e\x46\xc6\x2e\x9b\x49\xd8\x96\xbc\xaa\x68\x96\x42\xd7\x48\xab\x8a\x7e\xc9\xf8\x46\x46\xd5\x9f\x95\x3d\x69\x76\x9f\x64\xc9\xda\xb3\x1e\x1c\xe8\x89\xfd\x35\xc8\x6f\x23\xba\x4a\xd0\x0c\xc9\x5c\xca\xcb\x0c\xf0\xb2\xb4\xd2\xbf\x4f\xd4\x6a\x7c\xc9\x5f\xbe\xa0\xf6\x00\x65\x5b\xd4\x91\x48\x16\xec\x86\x23\xd2\xed\x01\x67\xa5\x92\xb7\x24\x93\x71\x73\x26\x9c\x27\x97\xfc\x40\x52\xd7\xf0\xed\xc9\x92\x98\xdc\x4e\x95\x2a\xd2\xde\xbd\x7a\xb9\xe5\xc1\x08\x7d\xdc\xcf\xd0\x8a\x8a\x48\x2b\xd1\xa3\xea\xdc\x16\xd2\x53\xab\xd3\x6e\xab\xe1\x3d\x3d\x36\xfc\x4f\x6d\x44\x8a\x60\x85\x1e\x61\x59\x7c\x8e\x97\x87\x61\xf7\x65\x10\x91\x8b\x67\x61\x70\xbd\x4f\xee\x80\x04\xe7\xd0\x15\xe7\xd9\x6f\x69\xc2\x7e\x4c\xeb\x59\x91\x18\x14\x54\x5b\x13\x26\xc7\xde\x1e\xa6\x3d\xbb\x42\xb3\x87\xa3\xc8\xcc\xf8\x05\x3f\x7c\x3e\x10\xbf\xd3\xc8\x76\xfb\x8d\xec\x4b\x5c\x47\xa6\xbd\xb0\x66\x6f\xc3\xb3\x63\x07\x38\x77\x1a\x33\x6d\x15\x4e\xef\xd6\x09\xb6\xf0\xf1\x67\xe7\x30\x29\x09\xfd\xc7\x78\xa7\xd0\xec\xc7\x3b\xda\xbc\xe6\x1f\x9d\xf0\x36\xb0\x56\x1e\x52\xef\x6e\x3e\x72\xb0\x2f\xe0\x25\x7e\xda\xf9\x89\x1f\x1f\x4f\x69\xba\x03\xf8\x6a\xcc\x42\x64\xf0\xf2\xd6\x33\x19\x65\x23\x15\xf1\xa4\xfd\x75\x7a\xca\x86\xad\x53\x69\x26\x2d\xcb\x62\x99\x96\xf5\x06\x75\x43\x15\xdf\xe4\x69\x22\xc3\x3d\x1e\xb9\x32\x94\x3c\xb7\xde\xc8\x41\xf3\xe7\x6d\xc4\x4e\x3e\x07\x38\x57\xf0\x54\xcf\x68\xda\xc5\x51\x80\x52\x0c\xb6\xbc\x71\xe4\xcd\xfe\xe6\x8c\x22\x7e\xba\xb7\x0d\x8a\xf0\xb6\x0d\x8a\x2d\xad\xb1\x68\x30\x4c\x1f\x53\x69\xd8\x4b\x9e\x2b\xb9\xa0\xc4\x48\xc4\x7e\x8a\xcb\x78\x9e\x82\xf8\x55\x22\xdc\x5a\xd1\x2d\x82\x8e\xea\x2f\x94\x2e\xe0\x31\x6e\x95\x1a\x64\x2a\x2f\xc8\x1e\xf7\xf9\x15\xd2\x2c\x46\xd2\xa5\x2f\x8f\x97\x1a\x3f\x3a\x84\x02\x98\x86\xe2\x47\xd7\x2b\x99\x96\x09\x4f\x32\x18\x0d\x62\x72\xb3\x69\xd3\x6c\xc2\x70\x7f\xa7\x6d\xe6\x59\x36\xe1\x31\x6a\x6b\x6e\x23\x18\x2e\x9b\xe8\xf2\x34\x1b\x90\x83\xe6\x3b\x72\xdc\x98\x27\x5e\xd5\x05\xcb\x8b\x38\xf1\xa2\xaf\xce\x92\xb5\x39\x78\x9e\x2d\xac\xd7\xd8\xee\x8d\x6b\x6b\xea\x49\x9a\xe7\x97\x70\x23\x99\x6d\x22\x45\x6b\x81\x89\x6c\x58\x63\x63\x97\x75\x99\x2d\xa6\x26\x6f\x0a\xfb\xe8\x08\x39\x29\xac\x94\x68\xe1\xa4\x44\x0b\xb4\x67\x3b\xe6\x51\x39\xb4\xbe\xcb\x5b\xe1\x75\x60\x8d\xd7\x5e\x55\x5e\x8e\x0e\xb1\x2a\xbd\xec\xc5\x4f\xd3\x45\x5a\xc2\x21\xff\xeb\x2a\x2d\x37\x3f\x53\x6e\xb5\x2d\xf6\x87\xe0\xb1\xe1\xe9\x26\x60\xfa\x8e\x9d\xfe\x1b\xab\x7f\xd8\xe8\xe7\xd9\x5b\xca\x43\x9f\x24\x28\x51\x94\xaa\x35\xb9\x14\xc6\x5d\x95\xc2\xb5\xda\x6f\xcc\x76\x94\x27\xf5\x8a\x78\xd4\x0b\x8a\x25\xbd\xa0\x66\x0e\x9a\x44\x80\x15\x78\xc8\xc0\x13\xa4\xe0\x42\x95\x99\x95\x11\xe5\x22\xe5\xab\x7a\xa3\x52\x34\x29\x98\xa2\x00\xe0\x92\xca\x66\x1a\x44\x3b\xac\x74\xc2\x08\x19\xad\x79\xc8\x88\xca\x50\x54\xd1\x1b\xbc\x37\x0b\xd9\x8c\x41\x1b\x3e\x68\xc3\x07\x01\x8f\xd4\xb8\x8d\x6f\x1c\x7e\xbc\x65\x70\xb4\x19\xac\xb8\xbb\x5a\x8f\xaf\x36\xe3\xae\x1b\x28\x35\x07\xf2\x1a\x0e\x5d\x43\x06\xae\xa7\x26\x8d\x51\x49\x66\xb5\x37\x9f\x1a\x73\x98\x55\x34\x0f\xad\x6c\x6b\x2b\x2c\xf8\x32\xea\xbb\xc4\x08\x1e\xbd\x79\xf3\x26\xf0\x00\x98\x9b\x8e\xa4\x5c\xf0\xba\x94\x99\x53\x94\xe2\x2f\xce\x79\x57\x4c\xed\x3a\x1f\x20\xd1\xb0\x37\x70\xaa\x7d\x70\xfe\xd7\x18\x41\x78\xf4\x66\x78\x12\x8c\xbd\x48\x2f\x45\x11\xd1\xb6\xb0\x3d\x9a\x11\x59\x75\x1e\x9f\x43\xe7\xd6\xc4\x02\xaf\x65\x19\xb8\x06\x82\x15\x5d\xdb\x32\xb0\x91\xa7\xb2\x99\xe8\x51\x86\x52\xff\xc9\x58\xb9\x03\xf2\xc9\xd5\x97\xbe\x90\x6a\xee\xad\xef\x34\x60\x3f\xa2\x17\x3c\x82\x2f\x82\xfd\xd8\x76\x14\xe4\xb1\xd3\x15\x40\x3e\xb9\x97\xe7\x4c\x42\x7d\xf4\x42\x99\x4a\xc5\xd5\x24\x78\x4a\xac\xa3\x41\x1a\xa5\xba\xfa\x34\x6e\xd1\x2a\x1e\xfc\x9f\xf0\x22\x18\x1e\x7a\x66\xf0\x7a\xbe\xf0\x86\x4f\x2a\x6f\x79\x26\xff\x98\xa1\x63\x09\xe4\x80\xd8\x35\x9c\x6e\xa7\x5d\xc4\xd9\xe8\x75\x0b\x35\x25\x05\x5b\x8a\xb9\xf0\xe8\xb6\xda\xda\x46\x1e\x1e\x8e\x5a\x5d\xdd\x81\x75\x57\xa5\x17\xc5\x7d\x45\xe3\xba\xbd\x79\xbc\x34\x2e\xd9\xe2\xbe\xdd\x64\x97\x31\xe6\xe2\xde\x1e\x44\xd6\xeb\x56\x4b\x9f\x56\x81\xd9\x99\x23\x3b\x0a\xdf\xfc\xe0\xc1\x44\xda\x3d\x67\x77\xdb\x31\x12\xa5\x88\xc8\x77\x5b\xa0\x9a\xe5\x8c\xce\x54\x54\xd6\xb8\xcf\x54\xc4\xb2\x2f\x9d\x4a\x50\xee\xce\x77\x30\x68\xac\xf7\x42\xf1\xb7\xda\x99\x0b\x2a\x64\xf0\x81\xa1\x14\xf1\x04\x05\xaf\x75\x70\x0f\x86\x2b\xb0\x56\xd1\x16\x96\x59\xc2\x8e\x41\xd1\xca\x82\x4b\x17\x5c\x24\x10\x5e\xc6\x79\x2e\xfc\x06\xf6\x46\xc8\x83\xbb\x9a\x66\x89\x97\x49\x2c\xc3\xe2\xfe\x50\x5c\x70\x5b\xa6\xf5\x0a\x93\x03\xb0\x60\x98\x42\xbc\xb0\xbc\x50\xd4\x49\x36\xaf\x19\x09\x9d\xef\x2a\xa5\xd3\xa0\xcb\x6c\x4d\x05\x03\x39\xeb\xb3\x7b\x77\x23\xda\x7a\x77\x95\x30\x7e\x7c\x8a\x98\xfc\x86\x6d\x35\xf7\xfc\x83\x92\x48\xa0\x98\x26\x7d\xc6\x17\xb1\xed\x18\x8a\x25\x64\x60\xef\x36\x34\x9e\xfc\xdc\x94\x69\xfc\xc9\x2b\x55\x5b\x54\xa4\x5c\x8c\x98\xe2\x19\x1b\xb4\x5d\x8e\x92\x0a\x3b\x90\x49\xed\x0d\xa0\xf7\x40\xd2\x10\xe9\xca\x77\xca\x51\x8c\x5d\x26\x78\x0b\xd5\xf9\xc7\x2e\x4b\xef\x35\x18\xd0\x5e\x11\xda\xaa\x1c\x77\x96\x71\x9b\x60\x78\xc1\xa8\xfd\x3c\x66\x21\x56\xa9\x63\x22\xeb\x58\xd6\x8b\x76\x77\x6d\xae\x71\xe8\x54\xd6\x0e\xc1\x3d\xc7\x83\xa4\x17\xdc\xc8\x57\x4e\x20\xc0\xf7\x3b\x19\xdb\x70\xb0\xba\x97\x71\x56\x3a\x24\xdd\xdf\x6c\x38\xcc\x68\xa0\xa9\x38\x3d\xaf\xb2\x88\x7d\x74\x68\xa0\xe5\x43\x3f\x29\x61\x72\xd4\x80\x3c\xa7\xaa\x12\x5a\x9c\x70\xfc\xf1\x0c\x29\x9f\xfb\x0c\x9c\x4c\x5e\xc0\x88\xb1\x09\x11\x07\xd1\x3e\xbe\x9a\xc1\xd2\x6d\xd5\x1c\xfd\x58\x3e\x69\x10\x89\x07\xbd\x4a\xb3\x06\x2a\x78\x74\xb3\xbc\xc0\xa8\x39\x8f\x6c\xd9\xbc\x15\x2a\xd0\x22\xf4\xf6\x92\x65\x8e\x9e\x19\xfe\xde\x67\x70\xb1\x1f\x9e\x7e\x26\xe9\x79\x38\xfe\x0c\xd2\xf4\x40\x6d\x27\xb2\xf1\x84\xb7\x9e\x40\x33\x9f\x17\x1e\x70\x24\x7c\xa1\x6f\x07\x5f\x18\x9e\x8c\x6b\x4d\x4d\xce\x80\xbd\xce\x80\xf6\x41\x5d\xc7\xd7\xb5\x5b\x8d\x12\x6a\x6e\x6c\xf0\xac\x82\x55\x35\xec\xaf\x82\x56\x06\x96\x52\xff\xa6\x6c\x1f\x5e\xde\xcb\xb2\x1a\x5a\x6f\xad\xb3\xdf\x5e\xea\x4b\x1f\x79\x80\xc2\xc6\x12\xfa\x8f\xc5\x83\x48\xcf\x7a\x4e\x5a\xf3\xb7\x8a\x26\x42\x43\x86\xed\x6c\xb5\x39\x8b\x8a\xfe\x7c\xbb\xd2\xd8\x6f\x56\xcd\xab\x2a\xa3\x95\xe2\xdd\xbf\x3e\x9a\x0f\x71\xaa\xa4\x45\x84\xce\x41\xbf\x39\x1c\xfd\xc6\x87\x7e\xe3\x47\xff\x8d\x2a\xa8\x25\xfa\x85\x53\xa5\xbb\x0b\x37\xc2\xdb\x88\x29\x9c\xe8\x60\xa5\xd8\xcd\x01\x58\x11\xde\xc6\x4a\x41\x49\x07\xab\xcc\x71\xee\x5f\xe9\x8c\x03\x9c\x2a\x67\x8a\x86\x3a\x88\xbf\x62\x5d\xb6\x7b\x9c\x3a\xbc\xf4\xc3\xac\x9d\x7e\x9b\x4d\xa8\x70\xda\xa8\x84\x48\x9e\x44\x7f\x8a\x2e\x55\x39\xc4\x5b\x58\xcd\xa5\x84\x95\x85\xcd\x2f\x54\x23\x2f\xbe\x96\xed\x37\x05\x79\x80\x86\xe6\xc7\x16\x4a\xab\xf0\x1f\x98\x15\xcb\x54\x26\xa1\x79\x94\x73\x09\xaf\x08\xe3\x64\x1b\x75\x91\x58\x00\x30\x22\x2f\xa3\x73\x49\x98\x46\x8a\x33\xd0\xb5\x3a\x91\xc4\x43\xbc\xe4\xc8\x6c\xc7\x87\x40\xfb\x22\xcc\xd3\xdb\x7a\x27\x42\x04\xda\x07\x21\x6c\xa4\x91\x55\x33\x8a\x71\x45\x89\x9b\xcc\xb4\x89\xb7\x8e\x11\xb5\x27\xf3\x5b\xe3\xa8\x96\xf1\xc2\x5e\x89\x1e\xb3\x6b\x2e\xae\xf6\xd4\x64\xf2\xb5\x63\x66\x0d\x76\x4e\xe7\x8c\x52\xd7\x07\x52\x58\x0d\xe3\xad\x04\xf4\x27\x50\x93\x8b\x04\x3c\x63\x50\x24\xf8\x13\x96\xd0\x9b\x01\xa2\x1e\xaa\x2e\x91\x88\x79\x5b\x4b\x16\xa4\xaf\xa7\x76\x0b\x17\x83\x47\xaa\x5d\x65\xf6\x48\x04\x95\x7e\xd7\x2b\xa2\x96\x10\x23\xdf\x27\x83\x81\x05\xab\x88\xa1\x81\x79\x13\x41\x3f\x91\xc0\x22\x16\xc8\xc9\x23\xab\x15\x8d\xd9\x24\xe5\x04\xd1\x22\x0b\xbb\x5c\x1d\x51\x4e\x54\x3c\x7a\x01\x8f\x58\x80\xd5\x8f\x1e\x70\xcf\x94\xcc\x86\xa6\x36\xce\x70\x73\x5d\xa2\x97\xe3\x37\xbb\xed\xa5\x99\xb6\x1f\xf5\xab\xd2\x49\x83\x65\x22\x53\x44\xd1\xf8\x59\x36\x09\xa4\x3c\x65\x93\x97\x35\xfe\x08\x8a\x2b\x7e\x7c\x1e\xe9\x2e\xac\xbe\x3f\x55\x2a\x41\xc0\xbe\x22\x5e\xe2\xd1\x6a\x54\x9e\x6a\x4f\x77\x2b\xa0\x80\x8c\x93\xe4\xe5\xac\xfc\xa9\x4c\x6f\xed\x20\x7c\xc9\x7f\x02\x42\x06\x30\x76\xad\x2a\xcc\xe6\x60\x91\x4c\xc4\xfe\xfd\x3f\xd8\xcd\x6a\x4a\x1b\x27\xb5\xa5\x4d\x7e\xef\x2f\x48\xd5\x6f\x04\x44\x21\xa3\xac\x51\x14\xee\x4c\xc4\xeb\x12\xc9\xc9\x89\x78\x5d\x23\xfd\x3d\xa2\x1f\xcb\xc9\xea\x43\xfe\x65\x51\x99\x37\x09\x1d\x5e\x75\x54\xaa\x11\xab\x5c\x8d\x0c\x5c\x71\xab\xea\x12\xd1\x7c\xc7\x64\x5c\xc4\xea\x59\xba\x90\x91\x6c\x32\x9c\xc8\x7f\xc9\x0b\xa7\x20\xa5\x31\xa9\x20\x3f\x4f\xd2\x86\xdd\xe6\xaa\x34\xe5\xa5\x39\x20\xa1\x04\xf7\x60\x02\x07\x89\xea\xd5\xf6\x83\x0f\xcb\x48\xc1\xa5\x09\x15\xb0\xa9\xc8\x84\x29\x8f\xc7\xc3\xc1\x20\x32\xe4\xf7\xf8\x9f\x07\x7a\x02\x69\x07\xcb\xcc\xa9\xb4\x2c\xf1\x56\xc5\xab\x52\xbe\xa2\x9d\x80\x5b\xa5\x07\xd9\x88\xd7\x3c\x35\xe2\x83\x6c\xa4\x3b\x3a\x14\x52\xca\xdf\x64\x97\xb0\xc1\xc2\x13\x19\xd5\x96\xe6\x97\xd1\xc2\xd5\x0a\xee\x47\xb6\x08\xdd\x61\x36\x49\x0a\x58\xf1\x14\xa7\xb0\x96\xb6\xe3\xeb\xf1\x2c\x4d\x95\x49\x4a\xfb\xda\x80\x97\x10\x22\xea\x44\x1a\x9b\x82\x4f\xe2\x1f\x98\x7c\x28\x0a\x61\x77\xd3\x7d\x8e\x01\xa2\x17\x8a\x98\x44\xc6\x00\x2e\x81\x35\x6e\xb1\xb7\xb1\x19\xf3\x97\x41\xd7\xdc\xaf\xda\x96\x79\x02\xd5\x1e\xc5\xde\x85\xd6\x14\xbf\x0a\xd2\xe9\x46\xb3\xfd\xe6\xbe\xab\x64\xbf\xc3\x3c\x47\x5d\xbd\xdd\xac\xea\xba\xd0\x97\x94\xa8\xd7\x08\xaa\xd5\xcd\x3c\xe3\xf7\x94\xb8\xef\xcc\x16\xfa\x89\x42\x9e\x4d\x3e\x05\x91\x7b\x30\xf0\xbc\xe8\xab\x48\x1d\xa3\x9b\x9a\x64\xd8\xb3\x10\x75\xfd\x03\x88\x5b\x23\x25\x47\x9e\x1c\x3e\x14\x87\x35\x36\x29\x84\xc7\x1c\x67\x95\xd5\xf0\xdf\x52\xfc\xf9\x19\xf8\xe9\x79\xfe\xfc\x19\x5e\xdf\x8c\x80\x4f\x83\x69\xbe\x59\x82\xdc\x80\x3f\xa8\x9e\x8e\xd1\x39\xbb\x8f\xcb\x24\x78\xfe\xac\x8f\xb0\xf8\x45\x23\xff\x2c\x4c\x9b\x2d\x74\x3a\xe4\x6c\xe7\xf2\x60\xf3\xaa\x52\x29\x10\x98\x52\xe4\x41\x20\xa3\x81\x47\x83\xfa\x27\xfa\x80\x27\x46\x2a\x58\xd4\x48\xba\xf0\x68\x02\x88\xa7\x63\x98\xed\x19\x1b\x80\x9d\x3c\xc0\x1a\x0e\xde\x7a\x9c\xbb\xc3\x52\xfa\x79\x3a\x93\x51\x28\x39\x86\xde\xb9\xda\xb6\xc6\x58\x3b\xb3\xce\xac\x75\x2b\x71\xe1\xd5\x4d\x5d\x43\xa4\x46\x52\xa6\x48\x20\x7c\xac\x6d\xe1\xeb\x81\x4c\xfd\xad\x28\xe6\xc7\x60\xee\x7a\x79\xfa\x35\x38\xba\x25\x56\x98\x75\xad\xb2\xdf\x53\x93\xe9\x9c\xa8\x32\xdc\xd7\x7f\xa2\x4b\x77\xed\x7a\x77\x83\x97\x47\xaa\xd2\xc0\xa9\x7f\x37\x39\x67\x5e\xa5\xdf\x86\x59\xdf\xfa\x18\x2e\xf3\x78\xf3\x2d\x8f\xe0\xbe\xf2\xf7\x35\xf7\x44\x52\x58\xac\xea\x6f\xb9\xaf\x03\x04\xd1\x12\xbe\xdd\x82\x67\x28\x91\xa7\xb6\x0a\x69\x17\x45\x10\x56\xf6\x1c\x9e\x95\x9f\x2e\x1f\xb9\x3a\x39\xfa\x7f\x20\xa8\x40\xe8\xdf\xe3\xba\xf0\x28\xfc\x7f\xec\x16\xd9\x72\x5d\x78\xb8\xc6\x3b\xd4\xdd\x71\xb4\xfd\xee\xd8\x8f\xed\x5f\x9f\xdf\xd2\xb4\x78\xf2\x65\xa6\xc5\x93\x6f\x2d\x2b\x75\x99\xc5\x8b\x69\x9e\x1e\x63\x2c\xe7\x0f\xb2\x2f\x86\xae\x64\x0c\x77\xd9\x17\x43\xdb\xbe\x18\x7e\x99\x7d\x31\xfc\xc3\xed\x8b\xdf\x8f\xbd\x37\x05\xe0\x9f\xff\x9e\x2a\x61\xb8\x5b\x25\xec\x66\xfc\x16\x0e\x1f\xac\x12\x5c\x76\xff\x91\x2a\x81\xbb\xff\x6f\xb9\x33\xfe\x53\xbc\x48\xed\x42\x4c\x2c\x67\x10\x71\x34\xe1\x44\xe2\xc6\xb1\xd0\xb9\xe1\xf4\x07\x18\xcc\x89\xf4\x3f\x7b\x10\x0e\x3e\xf7\xb4\xd1\x6d\xc3\x92\x33\xf5\xff\x20\x46\x26\x8c\x5a\xb0\x78\x77\x37\x44\x91\x64\xfe\x8a\xff\x88\x03\x10\xe1\x4f\x92\x78\x6d\x3a\xfd\x92\x5f\xff\x44\x31\x3c\xd9\x93\x1a\xfc\xf7\x37\x3f\x80\x27\x8e\x3f\xf5\x6a\x92\x01\x61\xe8\x3f\x6a\x82\x33\x1b\x59\xce\xf1\x03\x86\xbf\x3f\x52\xfa\x2e\x92\x3f\x12\xfc\xbf\x00\x00\x00\xff\xff\x6e\x8a\xfc\xec\x01\x54\x00\x00")

func libJsBytes() ([]byte, error) {
	return bindataRead(
		_libJs,
		"lib.js",
	)
}

func libJs() (*asset, error) {
	bytes, err := libJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "lib.js", size: 21505, mode: os.FileMode(420), modTime: time.Unix(1485807599, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _libCss = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x90\x5d\x6a\xc3\x30\x10\x84\xdf\x7d\x0a\x41\x28\x85\x80\x89\x2b\xea\x06\x9c\x37\x83\x4f\xd0\x13\xac\x2d\x45\x5e\xaa\x1f\x23\x29\x6d\x68\xc9\xdd\x2b\x7b\x65\x5c\x4a\x28\xd5\x9b\xbe\x65\x76\x66\x67\xa7\xe5\x39\xb2\xaf\x82\xa5\xf7\x81\x22\x8e\x0d\xe3\x55\x35\x5d\x4f\x0b\x99\x5c\xc0\x88\xce\x36\x0c\xfa\xe0\xf4\x25\x4a\xe2\xb3\xa8\x61\x15\x7d\xa2\x9b\x92\xa8\xa6\xcf\x28\x51\x8d\x69\xf6\x54\x55\x0f\x44\x7a\x18\xde\x94\x77\x17\x2b\xca\xc1\x69\xe7\x1b\xb6\x6b\xdb\xf6\x54\xdc\x8a\x62\x67\x00\x6d\x36\x37\x68\xcb\x55\x7c\xdc\x12\xdc\x51\x77\x5d\x47\x33\x03\x5e\x25\x15\x85\xf9\x91\xfa\xb0\x67\xaf\x60\x24\x83\xb0\x04\x7d\x0c\x74\x19\xdb\x1f\x16\xd3\x94\xf7\x8e\x27\xaf\xff\xb0\xe4\x2f\x75\xd7\x1e\x69\x4c\x6c\x4b\x91\x5b\xdb\x0e\x7e\x97\x3e\xe2\x00\xba\x04\x8d\x2a\x55\x67\x50\x08\x9d\x8b\x8b\xf2\x1a\x57\xee\x67\x63\xc2\x67\x67\x63\x19\xf0\x53\xa6\x3d\x3c\x57\x0f\x42\xa0\x55\xa5\x5f\xfb\xfc\xd7\x75\x1a\x7a\xa9\xe9\xba\x75\x01\xd5\xf3\x9c\xe5\xbf\xd6\xf2\x19\xdf\x8a\xef\x00\x00\x00\xff\xff\xe9\xf4\xef\xcc\x06\x02\x00\x00")

func libCssBytes() ([]byte, error) {
	return bindataRead(
		_libCss,
		"lib.css",
	)
}

func libCss() (*asset, error) {
	bytes, err := libCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "lib.css", size: 518, mode: os.FileMode(420), modTime: time.Unix(1485462180, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"index.html": indexHtml,
	"lib.js": libJs,
	"lib.css": libCss,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"index.html": &bintree{indexHtml, map[string]*bintree{}},
	"lib.css": &bintree{libCss, map[string]*bintree{}},
	"lib.js": &bintree{libJs, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}


func assetFS() *assetfs.AssetFS {
	assetInfo := func(path string) (os.FileInfo, error) {
		return os.Stat(path)
	}
	for k := range _bintree.Children {
		return &assetfs.AssetFS{Asset: Asset, AssetDir: AssetDir, AssetInfo: assetInfo, Prefix: k}
	}
	panic("unreachable")
}
