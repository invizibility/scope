// Code generated by go-bindata.
// sources:
// index.html
// lib.js
// lib.css
// DO NOT EDIT!

package main

import (
	"github.com/elazarl/go-bindata-assetfs"
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _indexHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x93\xd1\x52\xf3\x20\x10\x85\xef\xf3\x14\xfc\xdc\x27\xcc\xaf\x5e\x92\xdc\xfa\x00\x3e\x01\x09\x5b\xa1\x12\x40\xd8\x46\xf3\xf6\x6e\xa1\x3a\xcd\x4c\x1d\xeb\xd4\xdc\xc0\x2c\xe7\x7c\xec\xec\x09\xd2\xe0\xec\x86\xa6\x91\x06\x94\x1e\x1a\x46\x9f\x44\x8b\x0e\x86\x47\xf0\x61\x06\xf6\x34\x85\x08\x52\xd4\x5a\x3d\x77\xd6\xbf\xb0\x04\xae\xe7\x19\x57\x07\xd9\x00\x20\x67\x26\xc1\xae\xe7\x62\xca\x59\x8c\x21\x60\xc6\xa4\x62\x37\x5b\xdf\x51\x85\x5f\xe3\x74\x76\x3c\xd7\xe6\x29\xd9\x88\x0c\xd7\x08\x3d\x47\x78\x47\xb1\x57\x8b\xaa\x55\xce\x72\x9a\xaa\x45\xe8\xfb\x6e\x79\x28\x17\xed\xc9\x2b\x45\x55\xfc\x1a\xd2\xbe\x1e\xe0\x00\xdd\x72\xf7\x07\xa8\x04\x04\xcb\xd8\x2d\xff\x6f\x85\xed\x09\x94\xd6\x5b\x29\xdb\x3c\xb6\x20\x29\x6a\xf2\x8d\x1c\x83\x5e\x69\x2d\xe4\x7f\x6d\x5b\x37\xda\x2e\xcc\x6a\xa2\x87\xc8\xd9\xe4\x54\xce\x3d\x9f\xc1\x1f\x4e\x29\xd5\x54\xd5\x08\x8e\xed\x42\xea\xf9\x9b\xd5\x68\xf8\xc0\xca\xca\xa4\x28\x47\x03\x75\x1a\x95\x2f\x9c\x93\x80\xee\xa7\xca\x65\x86\x01\xfb\x6c\x90\x20\x75\x73\x89\xf2\x29\x39\xc7\x48\x41\xbd\x0e\xdb\xae\x1d\xec\xf0\xab\xed\x29\x78\x54\xd6\x43\xe2\xdf\x1b\x66\x12\xfc\x6c\x68\xdb\xe3\xdc\xea\xbc\xae\x09\xe1\xf8\x67\x6f\xa7\xde\x1c\xe7\x5e\x5e\xde\x47\x00\x00\x00\xff\xff\x61\x16\xf4\x09\x81\x03\x00\x00")

func indexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_indexHtml,
		"index.html",
	)
}

func indexHtml() (*asset, error) {
	bytes, err := indexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "index.html", size: 897, mode: os.FileMode(420), modTime: time.Unix(1485460952, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _libJs = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x3c\x5d\x73\xdb\x38\x92\xef\xfa\x15\x28\x66\x1f\xc8\x98\x96\x64\xe7\x6e\x1f\xe2\xf1\x5e\x4d\x3e\x3c\x76\x5d\xc6\x99\xb5\x33\x37\x77\xe7\x52\xb9\x68\x91\x96\x98\x50\xa2\x86\xa4\x6c\x69\xbd\xfa\xef\xd7\xdd\xf8\x06\x41\x7d\xe4\x66\x6a\xf9\x10\x93\x8d\x46\x03\x68\x34\x1a\xfd\xa5\x0c\x06\x4f\x49\xc5\x2e\xf3\xf7\xec\x9c\xfe\xfd\xe7\x3f\xd9\xcb\xe6\xac\xc7\xc1\xef\xf2\xc9\x6f\xf9\x04\x5a\xc4\x8b\x68\xc4\xa6\x7a\x5e\x3e\x43\x03\xfd\x11\x60\x7c\xef\xa7\x49\x93\x00\xf6\x33\x75\xb3\xa0\x97\xf9\x58\x80\x7a\xe1\xe3\x72\x3e\x6e\xf2\x72\x1e\xbe\x8b\x5e\x7a\x8c\xbd\xeb\xff\x94\x35\xd0\xa8\xc0\xbf\xde\x5c\xc5\xe3\xa4\x28\x1e\x92\xf1\xb7\x88\x21\x0a\x3e\x38\xee\xb8\x9c\x3f\x0a\xda\x06\xb4\xca\x92\x74\x6d\x12\xc8\xaa\xaa\xac\xe2\x2a\xab\x97\x45\x53\x47\x92\x00\x13\xdd\xfb\x40\x1f\xb0\xe1\x5f\xb7\x61\x3c\xad\x6a\x68\x11\x1d\xef\x86\x23\x17\xe1\x21\x9f\xd7\xf9\x3f\x32\x13\xe9\xc4\x40\x12\x73\x0e\x39\x76\x24\x1a\xe4\x54\xd3\x37\xf7\xbf\x2f\xb3\x65\xd6\xa7\x7f\xc3\x53\xd9\xde\x4f\xb3\xc7\xac\x0a\xd3\x37\xfd\xaf\x75\x39\x8f\x71\x62\xec\x88\x05\x83\x22\xaf\x9b\x60\x17\x92\x9c\x91\x46\x4c\x9e\x93\xbc\xf9\xb1\x28\x42\x62\x4b\x74\xd6\x93\x73\x78\xd7\x1f\x27\xf3\xa7\xa4\x36\x39\x05\xcc\xe9\x49\x36\x4e\xb3\x7c\x32\x6d\xd4\xe7\x73\x9e\x36\xd3\x9e\xe6\xf1\x04\xf0\x6b\xf5\xbd\x52\x6f\x6b\xf5\x06\x73\x3a\x0f\x02\xf5\xf9\x90\x54\x97\x44\x12\x06\xfc\xf7\xa1\x1e\x87\xcf\x42\xa3\xf1\x15\xf4\x34\x42\x53\x36\x49\xf1\x29\x9b\x4f\x9a\xa9\x39\x57\x31\x05\x2d\x11\x1c\xbb\x00\x9c\xe1\x99\x02\x09\xac\xfe\x63\x59\x7d\x4c\xc6\x53\x2d\x6c\x55\xcc\x72\xb3\x2f\x3e\x05\x3b\x3a\x67\xe1\x51\xd5\xcf\xe6\x69\xc4\x8e\xe9\xb5\x6e\x92\xaa\x89\x14\xda\x26\x32\x48\x37\xcb\x6a\xce\x0a\xc1\xd1\x9e\xc1\x9c\x79\x9a\x55\x37\x34\xb2\x39\xe3\x71\xb3\x8a\xd9\xaa\x7c\x7c\xac\xb3\x26\x66\x6b\xf9\xc2\xa7\x08\x2d\x35\x48\x4c\x06\x0d\xe2\xef\xb8\x2c\xca\x4a\x4f\x71\x30\x10\xfc\x6a\x56\x40\x94\x73\xad\x3f\x2f\xd3\x2c\x8c\xfa\x93\xac\x79\x5f\xce\x9b\x6c\xd5\x84\xc1\x69\x1a\x44\x7a\xfd\x83\x01\x48\x5f\x5d\x16\x59\xbf\x28\x27\xe1\x2c\x81\xf1\xe0\x9f\x7e\x41\xec\x8c\x7a\x0a\x0f\xf8\xc3\x42\x24\x9f\x13\xff\xe0\xcf\x0f\x62\x62\x02\x17\x40\x47\x47\x2e\xc3\x60\x2e\xfd\xc7\xbc\x28\x6e\x9b\x75\x91\xe1\xac\x70\xca\x16\x06\x09\xc7\x09\x34\xf1\xd5\x89\x5d\xbb\xcb\x47\xfd\x8b\xaa\x9c\x45\x6d\xdc\x53\x1f\xee\x97\xb2\x8d\x09\xf2\x44\x32\x89\xf8\xa7\xb0\x59\xab\x13\x1f\xca\x54\x8a\xdc\xda\xa5\xf9\x73\xb2\x6a\x13\x5d\xe3\x54\xb5\xa4\x1e\x6b\x12\xde\x75\xdf\x64\xe3\x26\x5c\xc1\xc9\x13\xbb\x8a\x6f\x27\xb0\x83\xf0\x77\xad\x20\x6b\x80\xc8\xc9\xc6\x9a\xa0\xb1\x49\x9b\x9e\xfe\x17\x67\x71\xcf\x25\xe8\xbe\xad\xc4\xa4\x9e\x71\xa5\x7e\x96\xa3\xa4\x5d\x81\x9e\x99\xe7\xcd\xfa\xcc\x6e\x4b\x50\x60\x8e\xfd\x8d\x9c\xd5\xa8\x04\xee\x46\x76\x03\x9f\xbf\xa7\x45\xae\x0c\xe4\xc4\x82\x77\x80\xe5\xf1\x85\x06\xe3\x24\xab\xe3\xbb\xfb\xa4\xa6\xae\xd4\x91\x3a\x62\x78\x52\xc3\x54\x1f\xd5\x54\x1c\xd5\x88\xbd\xe6\xca\x8a\x0d\xd4\x80\xad\xee\xb4\x6a\x20\x01\x0a\x94\x5e\x3f\xe5\xf3\x2c\xa9\xe0\x24\xa5\xe5\x2c\xc9\xe7\xe1\x1d\x92\xe6\xf4\x62\x26\x87\x19\x45\xfd\x2a\x99\x4f\xb2\xf0\x6e\x18\xb3\xe7\x91\x2d\x3d\x82\x91\xfd\xc5\xb2\x9e\x86\xf4\xee\xb4\x0b\x7e\x72\x04\xfe\x61\x63\x48\x81\x39\x67\xcf\x7e\x75\x43\x3b\xdf\xe6\x4f\x52\x55\x2e\x87\x00\xb4\x07\x1f\xf1\xc9\x1f\x19\xac\x0e\xce\x02\xfb\x1b\x0a\x8a\x0f\x05\x1f\x2e\x43\x84\xd8\x6a\xdf\x6c\x21\xfa\x03\x4a\x66\x27\x51\x12\xda\x7d\x88\x6e\xbc\x0a\x98\x84\x71\xe7\x4e\xc2\x28\xa8\xf3\x56\xd6\xee\xa9\x23\x3e\xb2\xc9\x91\x02\x33\xa8\x7d\xae\xd2\x7c\x9e\x14\x21\x7d\x4f\xb3\x59\xf6\x3e\x69\xb2\x49\x59\xad\x4f\x86\x91\x7d\x90\xf0\xa6\x9f\x54\xe5\x72\x9e\x42\xf7\xe0\xd5\xc7\x8b\x8f\x81\x4d\xf9\x20\xb5\xed\x2a\x56\x4d\xbd\x85\x22\x74\x10\x68\x9d\x98\x69\x1d\xc3\x57\x17\x99\x16\x8b\xba\x05\x56\xf1\x3a\xe6\x98\x1e\xc4\x4e\x31\x93\xd7\x54\xeb\xd6\x34\xaf\x3b\xeb\x8e\xab\x41\xcd\x76\xde\x73\xa2\xd1\xbc\xeb\xc2\x3c\xb2\xf6\xd9\xaf\x15\x2d\x7b\xc5\x51\x83\xbf\xd3\xd6\xf9\xed\xaa\x43\x34\xcc\xef\x5d\xf6\x15\xec\x18\x18\x28\x83\x00\x3e\x52\xb4\x0f\x11\xf8\x96\x7f\x91\xb6\xc0\xef\x63\xfe\x0d\x93\xa5\x2e\xf8\x25\x8c\x1a\xaf\x14\xff\xae\x4d\x34\xa9\xf7\x23\x67\xe5\xbb\x17\x5e\x48\xf3\x68\xab\x8a\x45\xcc\x65\x55\x70\x6b\xd7\xb4\x17\x69\x92\x82\x86\x9c\xb3\x36\xf8\x5c\xf9\x09\x7e\xbd\xf9\x14\xc4\x40\x48\x53\x16\x8c\x0a\x01\x18\xb3\x6e\xbe\x8a\xe1\x70\x97\xce\xec\x0b\xd5\x24\xff\xee\xea\xfa\xf6\xea\x7f\x3f\x06\x71\x8b\x6d\xf8\x08\x26\x85\xe6\xfd\x69\x32\x6c\x3c\xc5\x7d\x30\x78\x55\x67\x45\x46\x6f\xd1\x0b\x98\x43\xea\x8b\xe5\xb5\x38\x8e\x92\x90\xb2\x87\x15\x8e\x6c\xb1\x87\x34\xc6\xe9\xaf\xcc\x91\xee\x61\xbd\xd2\x2c\x4c\xaa\xc9\x72\x96\xcd\xe1\x24\x09\xbe\xfe\x07\x0b\x57\xe7\xec\x3e\xe6\x1d\x23\xf6\x96\xad\xce\x2c\x52\xeb\x43\x48\xad\x6d\x52\x6b\x9b\x94\xd8\xf9\x43\x08\x8a\x2e\x36\x59\x01\xb4\x89\x4b\xab\x6b\x6f\xd2\xd4\xc1\x26\x4c\x20\x9b\xac\xb2\xd4\xf6\xa6\xcb\x7b\xd8\x84\x39\xcc\xa6\xcc\x1d\xbc\xbd\xc9\xa2\xdf\x62\xd1\x04\x80\x4d\xd0\x74\x65\xf6\x26\xab\x3a\xd9\xc4\x15\x58\x0e\x21\x48\x10\x42\x0f\x85\x6d\x13\x3a\xce\x74\x14\x59\x6e\xf3\x2d\xb9\xb4\xb7\x62\xd3\x2f\xca\x6a\x66\x4e\x0b\xcf\x20\x88\xbd\x6e\xec\x89\xfb\x08\x9c\xdb\x9e\xe9\xcc\x5d\x2f\x67\xd6\x37\x1d\x0b\xfc\x7c\xe4\x14\x5f\x02\xec\x12\xbc\xbd\x1b\xc5\x41\x9d\xd1\xcb\x46\xd1\xea\x3c\x72\x42\x01\x20\x16\x2e\x40\x5b\x93\x40\x95\xfb\x1b\xe7\xc3\xb3\xfc\x07\x35\x85\x33\xf4\x32\xa4\xd2\xc0\x1e\xdc\x5e\xc2\xa1\xcd\x43\x3e\x18\x7c\xf9\xfc\xe1\x33\xbb\x91\xdd\xd8\xad\x1c\xb1\x4f\xed\x6a\x02\xd2\x0d\xe6\x00\x54\xb2\x41\x9a\x3f\x19\x7e\x34\x0c\x11\xe2\x3f\x0a\x02\xdb\x86\x47\x5d\xf9\xcf\x8b\x05\x1c\x7e\xa7\x17\xba\xf6\x38\xa7\xcf\x8b\x86\xa6\x25\x19\x01\xb7\x46\x02\xb7\xe7\x3d\x19\x1a\x26\x43\x84\xbf\xa5\xd4\xa1\xd8\xe4\x9f\x93\x66\xda\xa7\x6b\x5d\x60\x80\xed\x7a\x0a\x76\x2b\x58\x17\xea\x26\xf1\xe1\xbc\xe1\x38\xc6\xc8\x62\x32\x5b\x37\xc1\x60\x4b\x3f\xb3\x2e\x40\x64\x6f\xeb\x66\x1f\x0c\xd0\xea\xa1\x1e\x61\x33\xcd\xeb\xa8\xc5\x44\x10\xb9\x59\xf9\x94\x85\xa6\x82\x26\x36\xe4\x4f\xc2\x86\x32\x7a\x3b\x38\x39\xd9\x49\x7c\xdf\x71\x99\xb9\xd1\x0e\xfd\x15\xdf\x8b\xe4\x21\x2b\x82\xc8\x31\x10\xfb\x49\xd3\x54\x61\x00\x42\x14\xc0\xbc\xd3\x56\x33\xd9\x54\x36\x9c\xcc\xfe\x0c\x2f\x3f\x93\x3c\x9f\x21\x2c\x65\x5c\x24\x75\x9d\xa5\x44\x73\x76\x0c\xf7\x51\x53\x95\x05\x10\x6f\xaa\x65\x16\x89\xe1\xf2\xb4\x35\x1a\x62\xdf\xf1\x93\x31\x12\xb6\x7f\x56\x74\x21\xa0\xdb\x69\xf0\xb0\x5c\x20\xf3\xdb\x6b\x23\x99\xd4\x12\x6f\xb4\xd8\xb2\xa9\x99\x21\x16\xd3\x45\x90\xcf\xfe\x29\x29\x96\x59\x60\x5e\xcf\x1e\x63\x8e\x3f\x42\x3c\xd3\xfe\x75\x32\xcb\x9c\xf6\x4d\x07\x79\x2e\x9c\x07\xd2\xe7\x96\xca\xce\x11\x68\x3b\xff\xc8\x79\xa3\x30\xcc\x01\xe7\xcc\x81\x89\x58\x87\x01\x85\xfd\xea\xc3\x98\xb0\x83\x78\xa6\x83\x6d\xd6\x0d\xc3\xee\x28\x5c\xd3\x66\x06\xdb\x8b\x73\x20\xdb\x10\xb7\xf2\x0e\xcf\x80\xd8\xfc\x2c\xbd\x02\x73\x62\x35\xa2\x59\xe2\x39\x67\x9c\x0d\xdb\x91\x3f\x89\x90\x8d\x3d\x22\x2e\x02\xfd\x8a\x6d\x43\x9c\xb5\x67\xc9\x8d\xc5\x1d\x63\xb9\xfd\xb8\x28\xa3\xee\x27\x49\x16\x4e\x0c\x89\x15\x9e\x2a\x53\xf7\x49\x85\xd7\xb3\xf8\xdf\x66\xb6\x57\x53\x78\x75\xae\xec\x94\xcf\x17\xcb\xe6\xf0\x6e\x35\x4e\x51\xf6\x55\x98\x04\xe8\x3a\x2f\x74\xda\x4d\x0d\x85\x5b\x55\x67\x6d\xf4\x1a\x9d\xb4\x30\x20\x9b\x06\xbb\x9c\xfc\x75\xb8\x58\x05\x91\xbc\xa4\xb8\x92\x64\x57\x1f\x58\x02\x2e\x01\x78\x10\x0c\x5c\x85\x26\xeb\xb7\x94\x04\x71\x56\x2a\x11\x15\x2e\x26\xb6\xa1\x9a\xef\x34\xed\x22\x7e\xc1\x93\xe8\xcb\xe6\x12\x97\xdc\xa8\x4f\x89\xdb\x17\xb7\x27\xc9\xff\x72\x66\x31\x31\x78\xa5\x6e\x61\xd0\x87\xe6\xee\x1a\x8e\x88\x1c\x5c\xdf\xe2\x1d\x61\x43\xbc\xcb\xdd\x90\xa1\xb8\xa8\x70\xee\x8e\x56\x6c\x8d\x66\xed\xdb\x16\xc1\x53\xc8\x76\xa0\x13\x28\xc7\xac\xce\x6c\xd7\x67\x45\xa6\x7d\xbf\x5e\x14\x39\xac\xf6\x38\x68\x7b\x86\xc4\x7b\xfb\x50\xe3\x24\x83\xb7\x38\xed\xd8\x86\x93\xbf\x07\x2d\x47\xab\xbb\xe1\xc8\x69\x03\xe1\xe2\x2d\x46\x3a\xc0\x72\x52\xec\xdd\xf2\x6c\xf0\xf5\x72\x76\xb8\xf5\x0e\x9d\x7c\xf6\x3b\x6d\x85\x1e\x40\xa4\x35\xf6\xa6\x8d\xf8\x36\x59\x84\x70\x8a\x1d\xc6\x2a\x5a\xa8\x5a\x5f\x5f\x92\x41\x47\x22\x07\x1b\x49\xd2\x23\xb8\x12\x5c\x7f\xbe\x06\x3f\x4f\x7e\xfd\xd7\x7b\xf3\xfd\xfe\xf6\xef\x37\x5f\x34\xe0\x3f\x6f\xf4\xfb\x4f\xbf\xdd\x9b\x9f\x57\xd7\x5f\x3e\xde\xdc\x3b\x08\x26\x31\x8e\x60\x42\x3e\x7d\xfe\xf1\xc3\xc7\x0f\x18\xa2\x19\x89\xb9\x2d\xe7\x39\x8f\x76\x06\xef\x7e\xc1\x53\x7c\x71\xf3\xe3\x4f\xc1\xe8\x5f\x6e\xd8\xed\x9b\xfd\x68\xe5\x3e\x0e\xc8\x7c\xec\xcc\x7b\xa8\xbb\xd3\xc8\x79\x6c\x50\x2f\x5d\xee\x93\xac\xdb\x92\x94\x6b\xc7\xb3\x31\x76\x48\x6d\x11\x6b\xa6\x55\xf9\xcc\xe8\xe3\xcc\x58\x65\x3b\xeb\xd7\x91\xc8\x13\x60\x29\x74\xad\x3c\x9e\x68\x97\x1b\xdf\x4a\xe1\xf9\xd3\x80\xa7\xed\xe6\xd3\x3c\x5d\x79\xe6\x83\x1d\x3d\xc1\xa6\x16\xfb\x6d\x42\x77\xe9\x08\xaf\x2a\x97\xf3\x32\xe5\xb8\xa8\xac\x7c\xe3\x1b\x35\x1b\x5f\xb6\x91\x4f\xa8\x3b\x22\xd6\x15\xe6\x22\x96\x05\xbb\xf1\x88\x75\x7b\xe0\x59\xb9\xcb\x2d\xd9\x4b\x5c\x9c\x89\xe7\x49\x5e\x6e\x48\xea\x5a\x1e\x27\xdd\x81\xe3\xc7\x89\x52\x45\xda\xe7\x54\x1f\x8f\xdc\xfb\xd5\xc7\xfd\x0a\xaf\xff\x98\xb4\x12\xbd\xaa\xc6\x6d\x31\x24\x35\x3b\xed\x4c\x19\x36\xfd\x6b\xc3\x2b\xd2\xf6\x93\x70\xa1\x75\x0f\xcb\x54\x71\x7c\x0f\x8c\xf3\x2e\x82\x98\x1c\x0f\x8b\x82\xeb\x13\x71\xb3\x38\xb8\x86\xa6\xa4\xc8\xff\x91\xa5\xec\xe7\xac\x99\x96\xa9\xc1\x41\xb5\x34\x71\x8b\xee\xed\xf7\xd8\xa3\x2b\x32\x7b\xb8\x2f\xcc\xf4\xaa\xf9\xe1\xf3\xa1\xf8\x5d\x19\xb6\xdb\x9b\x61\xdf\xe3\xd0\x30\xed\x1b\xb4\x5b\x5b\xfe\x06\x3b\xc0\xe5\xd0\x94\x69\xa9\x70\x7a\xb7\x0e\xb0\x65\x1f\x7f\x75\x0e\x93\x92\xd0\xff\xdf\xde\x29\x32\xfb\xed\x1d\x2d\x5e\xef\x1f\x9d\xf0\x2e\xb4\xce\x3d\xa4\xd6\xdd\xfb\xc8\xd1\xbe\x63\x2f\xf1\xe9\xde\x4f\x7c\x7c\x7b\x4a\xc3\x1d\xb0\xaf\xc6\x28\xc4\x06\xef\xde\x7a\x06\xa3\xf4\x97\x62\x9e\xb4\xa4\xce\xcf\xd9\x49\xe7\x50\x7a\x93\x16\x55\xb9\xc8\xaa\x66\x8d\xba\xa1\x4e\x1e\x8a\x2c\x95\x41\x08\x8f\x5c\x19\x4a\x9e\xdb\x76\xe4\x59\xf8\x13\x05\x62\x25\x2f\x01\x8e\x15\xbc\xd5\x23\x9a\xe6\x74\x1c\xa0\x14\x83\xed\x6a\x1c\x79\xb3\xbd\x3d\xa2\x88\xea\xed\x6d\x4d\x22\xbe\x6d\x4d\x22\xa4\x33\xf8\x09\x86\xfd\x6b\xaa\x45\x7a\xcf\x83\xf3\x37\x14\x89\x8f\xd9\x2f\x49\x05\x9e\x2d\x88\x5f\x2d\x82\x80\x35\xdd\x22\xe8\x61\xfd\x46\xf1\x69\x1e\x54\x55\xb9\x28\xa6\x12\x51\xec\xf5\x80\x5f\x21\xed\xea\x17\x5d\x6b\xf1\x7a\xa1\xe9\xa3\x8f\x23\x90\xa9\x2b\x3e\xba\x40\xc6\xb4\x4c\x78\x54\xdb\x00\x88\xc1\x4d\xd0\xba\x0d\xc2\xf8\x72\xaf\x6b\xe4\x69\x3e\xe6\x91\x53\x6b\x6c\x23\x44\x2b\x41\x74\x79\x9a\x00\xdc\x41\xf3\x1b\x77\xdc\x18\x27\x59\x36\x25\x2b\xca\x24\xf5\x92\xaf\xaf\xd2\x95\xd9\x79\x96\xcf\xad\xcf\xc4\x6e\x4d\x1a\x6b\xe8\x71\x56\x14\xb7\x70\x23\x99\x30\x91\x13\xb4\xd0\x44\xfa\xa5\xb5\xb0\xdb\xa6\xca\xe7\x13\x73\x6f\x4a\xfb\xe8\x08\x39\x29\xad\x1c\x5c\xe9\xe4\xe0\x4a\xb4\x67\x7b\xe6\x51\x39\xb4\xa0\xc8\x5b\x52\x74\x60\x51\xd1\x5e\x65\x45\x8e\x0e\xb1\x4a\x8b\xec\xc9\x4f\xb2\x79\x56\xc1\x21\xff\xfb\x32\xab\xd6\xbf\x52\x32\xaf\x2b\x22\x85\xe8\x09\xd9\x8a\x34\xdd\xbb\x14\x4c\xdf\x91\xd3\xfe\x60\xb5\x9f\xb4\xda\x79\xba\x90\x12\x9f\xa7\x29\x4a\x14\xe5\x06\xcd\x5d\x0a\x93\x48\xe5\x0c\x2d\xf8\x83\x09\x47\x79\x52\x9f\x48\x47\x7d\xa0\x58\xd2\x07\x6a\xe6\xa0\xcd\x04\x98\x81\x87\x0d\x3c\x23\x07\x2e\x54\x95\x5b\x29\x38\x2e\x52\xbe\x32\x2b\xaa\x7d\x92\x82\x29\x32\xce\xb7\x54\xa7\xd1\x62\xda\x61\xb9\x7a\x23\x0a\xb2\xe2\x51\x10\xaa\x7b\x50\x55\x56\xf0\xdd\xae\x9c\x32\x3a\xad\x79\xa7\x35\xef\x04\x7b\xa4\xfa\xad\x7d\xfd\xf0\xf1\xd6\x5d\xd1\x62\xb0\xc4\xeb\x6e\x35\xba\x5b\x8f\x22\x37\x7c\x67\x76\xe4\x45\x03\xba\x68\x09\x5c\x4f\xcd\x1a\xa3\x74\xc9\x82\xb7\xdf\x5a\x63\x98\x65\x1b\x9b\xce\x6d\xeb\xca\x64\x7f\x1f\xf7\x5d\x66\x04\xaf\x2e\x2e\x2e\x02\x0f\x82\xb9\xe8\x58\xca\x05\x2f\x84\x98\x3a\x55\x10\xfe\x6a\x90\x4f\xe5\xc4\x2e\x2c\x01\x16\x9d\xf4\x87\x4e\x79\x09\x8e\xff\x11\x23\x08\xaf\x2e\x4e\x4e\x83\x91\x97\xe8\xad\xa8\x5a\xd9\x16\x4c\x46\x33\x22\xaf\xaf\x93\x6b\x68\xdc\x1a\xee\xe6\xc5\x13\x43\xd7\x40\xd8\xb0\xac\xa8\xb3\xdd\x1d\x5b\xd9\x13\x7b\x13\x3d\xca\x50\xea\x3f\x19\x2d\x77\x50\xbe\xb9\xfa\xd2\x17\x25\x2c\xbc\x05\x85\x06\xee\x57\xf4\x82\xcf\xe0\x0f\xe1\x7e\xed\x3a\x0a\xf2\xd8\xe9\x92\x13\x9f\xdc\xcb\x73\x26\xb1\xbe\x7a\xb1\x4c\xa5\xe2\x6a\x12\x3c\x25\xd6\xd1\x20\x8d\x52\xdf\x7d\x1b\x75\x68\x15\x0f\xfd\x6f\x78\x11\x9c\x1c\x7a\x66\xf0\x7a\xbe\xf1\x86\x4f\x6a\x6f\x3d\x20\x7f\xcc\x68\xa8\x44\x72\x50\xec\xa2\x41\xb7\xd1\xae\x1a\x6c\xb5\xba\x95\x81\x92\x83\x1d\xd5\x43\x78\x74\x3b\x6d\x6d\x23\x3b\x0c\x47\xad\xa9\x9f\xc0\xba\xab\xb3\x9b\xf2\xb9\xa6\x7e\x51\x7f\x96\x2c\x8c\x4b\xb6\x7c\xee\x36\xd9\x65\x60\xb5\x7c\xb6\x3b\x91\xf5\xba\xd5\xd2\xa7\x59\x60\x5a\xe1\xc8\x0e\x2c\xb7\x1f\x3c\x98\xc8\xbb\xbf\xb1\xa7\xed\x14\x89\x53\xc4\xe4\xa7\x2d\x58\xed\xfa\x39\x67\x28\xaa\xa3\xdb\x67\x28\xda\xb2\xef\x1d\x4a\x70\xee\xc9\x77\x30\xa8\xaf\xf7\x42\xf1\x43\xed\x60\x3c\xa5\xd7\x7d\x68\x28\x45\x3c\xe6\xce\x33\xf0\xee\xc1\x70\x05\xd6\xaa\x12\xc2\xba\x3e\x58\x31\x28\x5a\x59\xe1\xe7\xa2\x8b\xfc\xcb\xfb\xa4\x28\x84\xdf\xc0\x2e\x84\x3c\xb8\xb3\x69\xd7\x14\x99\xcc\x32\x2c\xee\x2f\xe5\x0d\xb7\x65\x3a\xaf\x30\xd9\x01\x2b\x54\x29\xc4\x0b\xd3\x0b\x45\x61\x5e\xfb\x9a\x91\xd8\xc5\xae\xda\x2d\x8d\xba\xc8\x57\x94\xc6\x2e\xd8\x80\x3d\xbb\x0b\xd1\xd6\xbb\xab\x84\xf1\xf1\x29\x62\xf2\x1b\xb6\x15\x79\xf3\x07\x25\x91\x50\x41\xc3\x42\x2f\x9a\xc4\xb6\x63\x28\xa6\x90\x83\xbd\xdb\xd2\x78\xf2\x79\xa8\xb2\xe4\x9b\x57\xaa\xb6\xa8\x48\x39\x19\x31\xc4\x0f\x6c\xd8\x75\x39\x4a\x2e\xec\x20\x26\xb5\x37\xa0\x3e\x03\x4b\x43\xe4\x2b\x5f\x29\x27\x31\x72\x37\xc1\x5b\x19\xcd\x1f\xbb\x0e\xba\xdf\xda\x80\xee\x12\xc4\x4e\xe5\xb8\xb3\x6e\xd8\x44\xc3\x0b\x46\xad\xe7\x35\x0b\xb1\x2c\x1a\x0b\x11\x8f\x65\x81\x62\xb4\x6b\x71\xad\x43\xa7\x52\x55\x88\xee\x39\x1e\x24\xbd\xe0\x46\x7e\x70\x02\x01\xbe\x1f\x66\xd8\x86\x83\xd5\xbc\x48\xf2\xca\x61\xe9\xfe\x66\xc3\x61\x46\x03\x0d\xc5\xf9\x79\x97\xc7\xec\xab\xc3\x03\x2d\x1f\xfa\x4d\x09\x93\xa3\x06\xe4\x39\x55\xa5\xb7\xe2\x84\xe3\xaf\x35\x48\xf9\x3c\xe7\xe0\x64\xf2\x8a\x39\x8c\x4d\x88\x38\x88\xf6\xf1\xd5\x08\x96\x6e\xab\x67\xe8\xc7\xf2\x41\x83\x58\xbc\xe8\x59\x9a\x95\x39\xc1\xab\x87\xc5\x0d\x46\xcd\x79\x64\xcb\xde\x5b\xa1\x02\x2d\x46\x6f\xaf\x91\xe5\xe4\x99\xe1\xef\xbd\x80\x8b\xbd\x79\xfb\x42\xd2\xb3\x39\x7e\x01\x69\xda\x10\xec\x54\x02\x4f\x39\xf4\x14\xc0\x7c\x5c\x78\xc1\x9e\xf0\x07\x7d\x3b\xf8\x83\xe1\xc9\xa4\xd1\xdc\xe4\x1b\xb0\xd7\x19\xd0\x3e\xa8\xeb\xf8\xba\x76\xab\x51\xb3\xcb\x8d\x0d\x9e\x55\xb0\xca\x54\xfd\x65\xb7\xca\xc0\x52\xea\xdf\x94\xed\xc3\xeb\x49\x59\xde\x00\xf4\xd1\x3a\xfb\xdd\xb5\xa5\xf4\xc8\x03\x14\xb6\xa6\x30\x78\x2d\x5e\x78\xb8\xcd\x77\xd2\xda\x3f\x8e\x33\x09\x1a\x32\xac\x63\x6b\xee\x28\x2a\xfa\xf3\xe7\xd5\x62\xfe\x69\xe5\xa3\xaa\x14\x57\x29\xde\xfd\x0b\x72\x79\x17\xa7\x2c\x57\x44\xe8\x1c\xf2\xeb\xc3\xc9\xaf\x7d\xe4\xd7\x7e\xf2\x7f\x52\xc9\xae\x24\x3f\x77\xca\x42\x77\xd1\x46\x7c\x9b\x30\x85\x13\x1d\xaa\x14\xbb\x39\x80\x2a\xe2\xdb\x54\x29\x28\xe9\x50\x95\x39\xce\xfd\x4b\x6b\xb1\x83\x53\x56\x4b\xd1\x50\x87\xf0\x1f\x58\x08\xec\x1e\xa7\x1e\xaf\xd2\x31\x8b\x75\x2f\xf3\x31\x55\xea\x1a\x95\x10\xe9\x9b\xf8\x2f\xf1\xad\x2a\x87\xb8\x84\xd9\xdc\x4a\x5c\x59\x6e\xfb\x4e\x01\x79\xb5\xaf\x84\x3f\x94\xe4\x01\x1a\x9a\x1f\x21\x94\x56\xe1\xbf\x68\x2a\x17\x99\x4c\x42\xf3\x28\xe7\x02\x3e\x11\xc7\xc9\x36\xea\xea\xa6\x00\x70\x44\x5e\x46\xe7\x92\x30\x8d\x94\xe4\xa0\x6b\x75\x22\x89\x87\x78\xc9\x91\xd9\x4e\x0f\x91\xf6\x25\x58\x64\x8f\xcd\x4e\x82\x88\xb4\x0f\x41\x58\x48\x2b\xab\x66\x94\x88\x8a\xda\x2c\x99\x69\x13\x5f\x3d\x23\x6a\x4f\xe6\xb7\xa6\x51\x2f\x92\xb9\x3d\x13\xdd\x67\xd7\x58\x5c\xed\xa9\xc1\xe4\x67\xcf\xcc\x1a\xec\x1c\xce\xe9\xa5\xae\x0f\xe4\xb0\xea\xc6\xa1\x84\xf4\x17\x50\x93\xf3\x14\x3c\x63\x50\x24\xf8\x9b\x89\xd0\x9b\x01\xa2\x16\xaa\x2e\x91\x84\x39\xac\x23\x0b\x32\xd0\x43\xbb\x15\x77\xc1\x2b\x05\x57\x99\x3d\x12\x41\xa5\xdf\xf5\x8c\x08\x12\x62\xe4\xfb\x74\x38\xb4\x70\x15\x33\x34\x32\x07\x11\xf6\x1b\x89\x2c\x62\x81\x9c\x3d\xb2\xcc\xce\x18\x4d\x72\x4e\x30\x2d\xb6\xa8\xcb\xd9\x11\xe7\x44\xa9\x9e\x17\xf1\x88\x05\x58\xb6\xe7\x41\xf7\x0c\xc9\x6c\x6c\x82\xf1\x0d\x37\xe7\x25\x5a\x39\x7d\xb3\xd9\x9e\x9a\x69\xfb\x51\xbb\xaa\xf9\x33\xb6\x4c\x64\x8a\x28\x1a\x3f\xcd\xc7\x81\x94\xa7\x7c\xfc\xbe\xa9\x8a\x33\xfd\x89\x75\xe0\xe7\x4a\x0d\x88\xf6\x0f\xb4\x7f\x78\x9c\x5a\x65\x92\xda\xbb\xdd\x8a\x28\x30\x93\x34\x7d\x3f\xad\x7e\xa9\xb2\x47\x3b\xf0\x5e\xf1\xdf\x19\x90\xd1\x8b\x4d\xcb\x1a\x33\x38\x58\x18\x13\xb3\xff\xfe\x1f\xf6\xb0\x9c\xd0\x62\x49\x55\x69\x33\xdf\xfb\x33\x45\x55\xad\x2e\xea\xf1\x64\xa9\x9d\x70\x61\x62\x5e\x5e\x47\x8e\x4d\xcc\xcb\xf3\xe8\xdf\x23\xfa\x45\x96\x2c\xb3\xe3\x7f\x2c\xce\x72\x90\xd0\xdb\xb2\xe8\x6e\xf0\x9a\x4a\x32\x8d\xac\x5b\xf9\xa8\xea\x1c\xd1\x64\xc7\x04\x5c\xcc\x9a\x69\x36\x97\xd1\x6b\x32\x96\xda\x1c\x52\x5f\x0f\xcb\xa6\x29\xf5\x79\x16\xa9\xed\xa0\x5e\x3e\xcc\x72\x7e\xa4\x85\x6a\x30\x21\x54\x63\x5c\xe4\xe3\x6f\x41\x6c\xfe\x1c\xdf\x5d\x84\xd8\x4e\x9e\xe8\x0d\xa3\xf6\x2a\xf5\x4e\x4a\x93\x42\x62\x09\x69\x00\xe6\x3b\x44\x54\xab\xb6\x41\x7c\x54\xce\x14\x5e\x96\x52\x11\x9c\x8a\x6e\x98\x32\x7d\x7c\x32\x1c\xc6\xc6\x19\x38\xfe\xb7\xa1\x1e\x40\xda\xd2\x32\xfb\x2a\xad\x53\xbc\x99\xf1\xba\x95\x9f\x68\x6b\xe0\x52\xe9\x45\x02\xd1\x54\x20\x20\xbe\x48\x20\xdd\xf3\xa1\x90\x7a\xfe\x25\x9b\x84\x1d\x17\x9e\xca\xc8\xb8\x34\xe1\x0c\x08\x57\x4d\xb8\x1e\x09\x11\xfa\xc7\x04\x49\x0e\x58\x31\x19\xa7\xde\x94\x96\xe3\x6b\xf1\x4c\x0d\x10\x2c\x5b\x3e\x34\xf0\x25\x86\x88\x5c\x91\xd6\xa7\x00\x96\xf8\x5f\x37\xbe\x94\xa5\xb0\xdd\xc9\x26\xc0\x20\xd3\x3b\xc5\x4c\x62\x63\x00\x82\xb7\xc2\x25\xf6\xd7\xf6\xc6\xfc\x75\x18\x99\xeb\x55\xcb\x32\x4f\xb4\x5a\xa3\x58\xbb\xd0\xbc\xe2\xf7\x2e\x3a\x65\x69\xc2\x1f\x9e\xc5\x8d\xd2\x33\x73\x3c\x97\x5c\xc6\x7e\x49\xe6\x99\x9d\xa3\xc4\x48\x9f\xb8\x62\x04\x6f\xf0\x62\xc1\x1a\x80\x96\x2c\x07\xa8\xe7\x62\xfd\xeb\x1c\x21\xb7\x5c\x80\x70\x36\x98\x8d\x51\x3f\xe0\x39\x33\x71\x40\x8d\xf1\xd9\x89\x6f\x79\xf6\xa5\x58\x93\x91\xa5\x7f\x14\x05\x84\xb0\x5a\x8f\x97\x6d\xd0\x4f\x2f\x74\x1d\xae\x74\x8f\x2d\x1d\xc9\x89\x6b\x90\x2c\xd9\xa4\x82\x48\xaa\x82\x6c\xb3\x01\x71\xe8\x7f\x37\x81\x3d\x8a\xad\x3d\xdf\xa0\x65\xf8\x95\x3c\xdb\x58\xd6\xcf\xfe\x5f\x00\x00\x00\xff\xff\xe8\xb9\xfb\x61\x8d\x45\x00\x00")

func libJsBytes() ([]byte, error) {
	return bindataRead(
		_libJs,
		"lib.js",
	)
}

func libJs() (*asset, error) {
	bytes, err := libJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "lib.js", size: 17805, mode: os.FileMode(420), modTime: time.Unix(1485549727, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _libCss = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x90\x5d\x6a\xc3\x30\x10\x84\xdf\x7d\x0a\x41\x28\x85\x80\x89\x2b\xea\x06\x9c\x37\x83\x4f\xd0\x13\xac\x2d\x45\x5e\xaa\x1f\x23\x29\x6d\x68\xc9\xdd\x2b\x7b\x65\x5c\x4a\x28\xd5\x9b\xbe\x65\x76\x66\x67\xa7\xe5\x39\xb2\xaf\x82\xa5\xf7\x81\x22\x8e\x0d\xe3\x55\x35\x5d\x4f\x0b\x99\x5c\xc0\x88\xce\x36\x0c\xfa\xe0\xf4\x25\x4a\xe2\xb3\xa8\x61\x15\x7d\xa2\x9b\x92\xa8\xa6\xcf\x28\x51\x8d\x69\xf6\x54\x55\x0f\x44\x7a\x18\xde\x94\x77\x17\x2b\xca\xc1\x69\xe7\x1b\xb6\x6b\xdb\xf6\x54\xdc\x8a\x62\x67\x00\x6d\x36\x37\x68\xcb\x55\x7c\xdc\x12\xdc\x51\x77\x5d\x47\x33\x03\x5e\x25\x15\x85\xf9\x91\xfa\xb0\x67\xaf\x60\x24\x83\xb0\x04\x7d\x0c\x74\x19\xdb\x1f\x16\xd3\x94\xf7\x8e\x27\xaf\xff\xb0\xe4\x2f\x75\xd7\x1e\x69\x4c\x6c\x4b\x91\x5b\xdb\x0e\x7e\x97\x3e\xe2\x00\xba\x04\x8d\x2a\x55\x67\x50\x08\x9d\x8b\x8b\xf2\x1a\x57\xee\x67\x63\xc2\x67\x67\x63\x19\xf0\x53\xa6\x3d\x3c\x57\x0f\x42\xa0\x55\xa5\x5f\xfb\xfc\xd7\x75\x1a\x7a\xa9\xe9\xba\x75\x01\xd5\xf3\x9c\xe5\xbf\xd6\xf2\x19\xdf\x8a\xef\x00\x00\x00\xff\xff\xe9\xf4\xef\xcc\x06\x02\x00\x00")

func libCssBytes() ([]byte, error) {
	return bindataRead(
		_libCss,
		"lib.css",
	)
}

func libCss() (*asset, error) {
	bytes, err := libCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "lib.css", size: 518, mode: os.FileMode(420), modTime: time.Unix(1485462180, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"index.html": indexHtml,
	"lib.js": libJs,
	"lib.css": libCss,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"index.html": &bintree{indexHtml, map[string]*bintree{}},
	"lib.css": &bintree{libCss, map[string]*bintree{}},
	"lib.js": &bintree{libJs, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}


func assetFS() *assetfs.AssetFS {
	assetInfo := func(path string) (os.FileInfo, error) {
		return os.Stat(path)
	}
	for k := range _bintree.Children {
		return &assetfs.AssetFS{Asset: Asset, AssetDir: AssetDir, AssetInfo: assetInfo, Prefix: k}
	}
	panic("unreachable")
}
